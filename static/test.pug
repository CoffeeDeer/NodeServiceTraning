doctype html
head
	//- script(src="https://docs.opencv.org/3.4/opencv.js")
	link(rel="stylesheet" href="https://unpkg.com/jcrop/dist/jcrop.css")
	script(type="text/javascript" src="https://unpkg.com/jcrop")

body
	h1 #{title}
	p.greetings#people #{message}

	img#target(src='img/IMG_2255.png', style=("width: 700px;"))
	img#target(src='img/1593262874.jpg', style=("width: 700px;"))
	
	div#space

	script
		//-
			const stage = Jcrop.attach('target');
			stage.listen('crop.change',(widget,e) => {
				console.log(widget.pos);
			});
	script.
		function cropImage(image, croppingCoords) {
			var cc = croppingCoords;

			var workCan = document.createElement("canvas"); // create a canvas
			workCan.width = Math.floor(cc.width);  // set the canvas resolution to the cropped image size
			workCan.height = Math.floor(cc.height);
			
			var ctx = workCan.getContext("2d");    // get a 2D rendering interface
			ctx.drawImage(image, -Math.floor(cc.x), -Math.floor(cc.y)); // draw the image offset to place it correctly on the cropped region
			
			var result = new Image()
			result.src = workCan.toDataURL();       // set the image source to the canvas as a data URL
			
			return result;
		}

		var charactersImageList = []

		var image = new Image();
		image.src = "img/characters.jpg"; // load the image
		image.onload = function () {  // when loaded

			var row = Math.floor(this.height / 76)
			var col = Math.floor(this.width / 76)

			console.log('row: ', row, ' col: ', col)

			for(var i = 0; i < row; i++){
				for(var j = 0; j < col; j++){
					var result = cropImage(
						this, {
						x : j * 76,
						y : i * 76,
						width : 76,
						height : 76
					});
					//document.getElementById('space').appendChild(result);  // Add the image to the DOM
					charactersImageList.push(result)
				}
			}

			document.getElementById('space').appendChild(charactersImageList[92]); 

			//test
		};


